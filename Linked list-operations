#include<stdio.h>
#include<malloc.h>
typedef struct node
{
    int data;
    struct node *next;
}NODEPTR;
NODEPTR *start=NULL,*tptr,*shadow,*newnode;
insertLL(int num)
{
    newnode=(NODEPTR*)malloc(sizeof(NODEPTR));
    newnode->data=num;
    newnode->next=NULL;
    for(tptr=start;tptr;shadow=tptr,tptr=tptr->next);
    if(start==tptr)
    {
        newnode->next=start;
        start=newnode;
    }
    else
    {
    newnode->next=shadow->next;
    shadow->next=newnode;
    }
}
void displayLL()
{
    for(tptr=start;tptr;tptr=tptr->next)
        printf("%d->",tptr->data);
}
void searchNode(int num)
{
    for(tptr=start;tptr && tptr->data != num;tptr=tptr->next);
            if(tptr == NULL)
            printf("\nNot Found");
            else
            printf("\nFound");
}
void deleteNode(int num)
{
        for(tptr=start;tptr&&tptr->data!=num;shadow=tptr,tptr=tptr->next);
            if(tptr==NULL)
                return -1;
            else if(tptr==start)
            {
                start=start->next;
                free(tptr);
            }
            else
            {
                shadow->next=tptr->next;
                free(tptr);
            }
}
int main()
{
    insertLL(20);
    insertLL(3);
    insertLL(10);
    displayLL();
searchNode(3);
 deleteNode(3);
display();
return 0;

}
